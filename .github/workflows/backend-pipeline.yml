name: LMS CI/CD - DOCR + DigitalOcean Kubernetes

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Build and Test All Custom Services
        run: |
          $services = @("eureka-server", "auth_service", "course_service", "assignment_service", "resource_service", "api_gateway")
          foreach ($service in $services) {
            Push-Location $service
            ./gradlew.bat clean build -x test
            ./gradlew.bat test
            Pop-Location
          }

      - name: Docker Compose Build All
        run: docker compose --project-name back-end build

  push-images:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Authenticate to DOCR
        run: doctl registry login
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DO_API_TOKEN }}

      - name: Tag and Push Images to DOCR
        run: |
          $tags = @{
            "back-end-api_gateway" = "api-gateway"
            "back-end-auth_service" = "auth-service"
            "back-end-course_service" = "course-service"
            "back-end-assignment_service" = "assignment-service"
            "back-end-resource_service" = "resource-service"
            "back-end-eureka-server" = "eureka-server"
          }

          foreach ($local in $tags.Keys) {
            $remote = $tags[$local]
            docker tag $local registry.digitalocean.com/lms-registry333/$remote:latest
            docker push registry.digitalocean.com/lms-registry333/$remote:latest
          }

  cleanup-k8s:
    runs-on: self-hosted
    needs: push-images
    steps:
      - name: Configure Kubernetes Context for DigitalOcean
        run: doctl kubernetes cluster kubeconfig save lms-cluster
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DO_API_TOKEN }}

      - name: Delete Old Deployments and Services
        run: |
          $resources = @("eureka-server", "auth-service", "course-service", "assignment-service", "resource-service", "api-gateway")

          foreach ($res in $resources) {
            kubectl delete deployment $res -n lms --ignore-not-found
            kubectl delete service $res -n lms --ignore-not-found
            $replicaSets = kubectl get rs -n lms --no-headers | ForEach-Object { ($_ -split '\s+')[0,1,2,3,4] } | Where-Object { $_[0] -like "$res*" }
            foreach ($rs in $replicaSets) {
              kubectl delete rs $rs[0] -n lms --ignore-not-found
            }
          }

  deploy:
    runs-on: self-hosted
    needs: cleanup-k8s
    steps:
      - name: Apply All Updated YAMLs to Kubernetes
        run: |
          kubectl apply -f deployment/zookeeper.yaml
          kubectl apply -f deployment/kafka.yaml
          kubectl apply -f deployment/kafka-cli.yaml
          kubectl apply -f deployment/eureka-server.yaml
          kubectl apply -f deployment/auth-service.yaml
          kubectl apply -f deployment/course-service.yaml
          kubectl apply -f deployment/assignment-service.yaml
          kubectl apply -f deployment/resource-service.yaml
          kubectl apply -f deployment/api-gateway.yaml
          kubectl apply -f deployment/prometheus.yaml
          kubectl apply -f deployment/grafana.yaml
          kubectl apply -f deployment/grafana-datasource-config.yaml
          kubectl apply -f deployment/zipkin.yaml
