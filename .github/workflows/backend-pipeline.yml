name: Microservices CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'auth_service/**'
      - 'course_service/**'
      - 'assignment_service/**'
      - 'resource_service/**'
      - 'api_gateway/**'

jobs:
  auth-service:
    if: ${{ contains(github.event.head_commit.message, '[auth]') || contains(github.event.head_commit.message, 'auth_service/') }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Test Auth Service
        run: |
          cd auth_service
          .\gradlew.bat test
          cd ..

      - name: Build & Deploy Auth Service
        run: |
          cd auth_service
          .\gradlew.bat clean build -x test
          cd ..
          try { docker compose -f auth_service/docker-compose.auth.yml down -v } catch { Write-Host "Ignore docker down error" }
          docker compose -f auth_service/docker-compose.auth.yml build --no-cache
          docker compose -f auth_service/docker-compose.auth.yml up -d

  course-service:
    if: ${{ contains(github.event.head_commit.message, '[course]') || contains(github.event.head_commit.message, 'course_service/') }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Test Course Service
        run: |
          cd course_service
          .\gradlew.bat test
          cd ..

      - name: Build & Deploy Course Service
        run: |
          cd course_service
          .\gradlew.bat clean build -x test
          cd ..
          try { docker compose -f course_service/docker-compose.course.yml down -v } catch { Write-Host "Ignore docker down error" }
          docker compose -f course_service/docker-compose.course.yml build --no-cache
          docker compose -f course_service/docker-compose.course.yml up -d

  assignment-service:
    if: ${{ contains(github.event.head_commit.message, '[assignment]') || contains(github.event.head_commit.message, 'assignment_service/') }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Test Assignment Service
        run: |
          cd assignment_service
          .\gradlew.bat test
          cd ..

      - name: Build & Deploy Assignment Service
        run: |
          cd assignment_service
          .\gradlew.bat clean build -x test
          cd ..
          try { docker compose -f assignment_service/docker-compose.assignment.yml down -v } catch { Write-Host "Ignore docker down error" }
          docker compose -f assignment_service/docker-compose.assignment.yml build --no-cache
          docker compose -f assignment_service/docker-compose.assignment.yml up -d

  resource-service:
    if: ${{ contains(github.event.head_commit.message, '[resource]') || contains(github.event.head_commit.message, 'resource_service/') }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Test Resource Service
        run: |
          cd resource_service
          .\gradlew.bat test --tests "com.lms.resource_service.unit_tests.*"
          cd ..

      - name: Build & Deploy Resource Service
        run: |
          cd resource_service
          .\gradlew.bat clean build -x test
          cd ..
          try { docker compose -f resource_service/docker-compose.resource.yml down -v } catch { Write-Host "Ignore docker down error" }
          docker compose -f resource_service/docker-compose.resource.yml build --no-cache
          docker compose -f resource_service/docker-compose.resource.yml up -d

  gateway:
    if: ${{ contains(github.event.head_commit.message, '[gateway]') || contains(github.event.head_commit.message, 'api_gateway/') }}
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Test API Gateway
        run: |
          cd api_gateway
          .\gradlew.bat test
          cd ..

      - name: Build & Deploy API Gateway
        run: |
          cd api_gateway
          .\gradlew.bat clean build -x test
          cd ..
          try { docker compose -f api_gateway/docker-compose.gateway.yml down -v } catch { Write-Host "Ignore docker down error" }
          docker compose -f api_gateway/docker-compose.gateway.yml build --no-cache
          docker compose -f api_gateway/docker-compose.gateway.yml up -d

