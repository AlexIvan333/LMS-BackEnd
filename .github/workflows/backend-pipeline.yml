name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: lms_db
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_DATABASE: lms_db2
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Wait for PostgreSQL and MongoDB
      - name: Wait for PostgreSQL
        run: |
          until nc -z postgres 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done
      - name: Wait for MongoDB
        run: |
          until nc -z mongodb 27017; do
            echo "Waiting for MongoDB..."
            sleep 1
          done

      # Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      # Modify application.properties for Pipeline
      - name: Update application.properties
        run: |
          sed -i 's|jdbc:postgresql://localhost:5433|jdbc:postgresql://postgres:5432|g' src/main/resources/application.properties
          sed -i 's|spring.data.mongodb.host=localhost|spring.data.mongodb.host=mongodb|g' src/main/resources/application.properties

      # Make Gradlew executable
      - name: Make Gradlew executable
        run: chmod +x ./gradlew

      # Build the backend
      - name: Build Backend
        run: ./gradlew build

      # Verify JAR file exists
      - name: Verify JAR File
        run: ls -la build/libs

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/*.jar

  dockerize:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Download build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build/libs

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and restart only the backend service
      - name: Rebuild and Restart Backend
        run: |
          docker-compose build backend
          docker-compose up -d backend
