name: Microservices CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Make Gradlew executable
        run: |
          chmod +x auth_service/gradlew
          chmod +x course_service/gradlew
          chmod +x assignment_service/gradlew
          chmod +x resource_service/gradlew
          chmod +x api_gateway/gradlew

      # ðŸ”¨ Build JARs from each service folder
      - name: Build Auth Service
        run: cd auth_service && ./gradlew clean build -x test

      - name: Build Course Service
        run: cd course_service && ./gradlew clean build -x test

      - name: Build Assignment Service
        run: cd assignment_service && ./gradlew clean build -x test

      - name: Build Resource Service
        run: cd resource_service && ./gradlew clean build -x test

      - name: Build API Gateway
        run: cd api_gateway && ./gradlew clean build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Debug Confirm JARs exist
        run: |
          ls -lh auth_service/build/libs
          ls -lh course_service/build/libs
          ls -lh assignment_service/build/libs
          ls -lh resource_service/build/libs
          ls -lh api_gateway/build/libs

      # ðŸ”§ Remove existing containers/images/volumes (cleanup)
      - name: Stop and remove existing containers
        run: |
          docker compose -f auth_service/docker-compose.auth.yml down -v || true
          docker compose -f course_service/docker-compose.course.yml down -v || true
          docker compose -f assignment_service/docker-compose.assignment.yml down -v || true
          docker compose -f resource_service/docker-compose.resource.yml down -v || true
          docker compose -f api_gateway/docker-compose.gateway.yml down -v || true
          docker image prune -a -f

      # ðŸ”§ Build Docker images
      - name: Build Docker images
        run: |
          docker compose --progress plain -f auth_service/docker-compose.auth.yml build --no-cache
          docker compose --progress plain -f course_service/docker-compose.course.yml build --no-cache
          docker compose --progress plain -f assignment_service/docker-compose.assignment.yml build --no-cache
          docker compose --progress plain -f resource_service/docker-compose.resource.yml build --no-cache
          docker compose --progress plain -f api_gateway/docker-compose.gateway.yml build --no-cache

      # ðŸš€ Run containers with updated images
      - name: Run Docker containers (services + DBs)
        run: |
          docker network create backend-network || true

          # Start DBs and services
          docker compose -f auth_service/docker-compose.auth.yml up -d
          docker compose -f course_service/docker-compose.course.yml up -d
          docker compose -f assignment_service/docker-compose.assignment.yml up -d
          docker compose -f resource_service/docker-compose.resource.yml up -d

          # Wait for them to initialize
          sleep 25

          # Start gateway
          docker compose -f api_gateway/docker-compose.gateway.yml up -d

          # Final wait to stabilize
          sleep 20

      - name: Check running containers
        run: docker ps -a
