name: LMS CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'auth_service/**'
      - 'course_service/**'
      - 'assignment_service/**'
      - 'resource_service/**'
      - 'api_gateway/**'
      - 'eureka-server/**'
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      # üî® Build each service
      - name: Build all services
        run: |
          cd eureka-server && ./gradlew.bat clean build -x test && cd ..
          cd auth_service && ./gradlew.bat clean build -x test && cd ..
          cd course_service && ./gradlew.bat clean build -x test && cd ..
          cd assignment_service && ./gradlew.bat clean build -x test && cd ..
          cd resource_service && ./gradlew.bat clean build -x test && cd ..
          cd api_gateway && ./gradlew.bat clean build -x test && cd ..

      # ‚úÖ Run tests
      - name: Test all services
        run: |
          cd auth_service && ./gradlew.bat test && cd ..
          cd course_service && ./gradlew.bat test && cd ..
          cd assignment_service && ./gradlew.bat test && cd ..
          cd resource_service && ./gradlew.bat test --tests "com.lms.resource_service.unit_tests.*" && cd ..
          cd api_gateway && ./gradlew.bat test && cd ..

      # üßπ Stop & Remove all running containers
      - name: Stop & Remove Containers
        run: |
          try {
            docker compose -f docker-compose.services.yml down --remove-orphans
          } catch {
            Write-Host "Containers may not have been running ‚Äî continuing..."
          }

      # üê≥ Build all Docker services
      - name: Docker Compose Build
        run: docker compose -f docker-compose.services.yml build --no-cache

      # üöÄ Start all Docker containers
      - name: Docker Compose Up
        run: docker compose -f docker-compose.services.yml up -d
