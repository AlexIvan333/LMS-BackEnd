name: Microservices CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      # Build JARs from each service
      - name: Build Auth Service
        run: |
          cd auth_service
          ./gradlew clean build -x test

      - name: Build Course Service
        run: |
          cd course_service
          ./gradlew clean build -x test

      - name: Build Assignment Service
        run: |
          cd assignment_service
          ./gradlew clean build -x test

      - name: Build Resource Service
        run: |
          cd resource_service
          ./gradlew clean build -x test

      - name: Build API Gateway
        run: |
          cd api_gateway
          ./gradlew clean build -x test

      - name: Debug Confirm JARs exist
        run: |
          dir auth_service\build\libs
          dir course_service\build\libs
          dir assignment_service\build\libs
          dir resource_service\build\libs
          dir api_gateway\build\libs

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Stop and remove existing containers
        run: |
          docker compose -f auth_service/docker-compose.auth.yml down -v
          docker compose -f course_service/docker-compose.course.yml down -v
          docker compose -f assignment_service/docker-compose.assignment.yml down -v
          docker compose -f resource_service/docker-compose.resource.yml down -v
          docker compose -f api_gateway/docker-compose.gateway.yml down -v
          docker network rm backend-network
          docker image prune -a -f

      - name: Build Docker images
        run: |
          docker compose -f auth_service/docker-compose.auth.yml build --no-cache
          docker compose -f course_service/docker-compose.course.yml build --no-cache
          docker compose -f assignment_service/docker-compose.assignment.yml build --no-cache
          docker compose -f resource_service/docker-compose.resource.yml build --no-cache
          docker compose -f api_gateway/docker-compose.gateway.yml build --no-cache

      - name: Run Docker containers (services + DBs)
        run: |
          docker network create backend-network

          docker compose -f auth_service/docker-compose.auth.yml up -d
          docker compose -f course_service/docker-compose.course.yml up -d
          docker compose -f assignment_service/docker-compose.assignment.yml up -d
          docker compose -f resource_service/docker-compose.resource.yml up -d

          Write-Host "Waiting for services to stabilize..."
          Start-Sleep -Seconds 25

          docker compose -f api_gateway/docker-compose.gateway.yml up -d

          Write-Host "Final stabilization..."
          Start-Sleep -Seconds 20

      - name: Show running containers
        run: docker ps -a
