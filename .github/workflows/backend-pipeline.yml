name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: new_password
          POSTGRES_DB: lms_db
      mongo:
        image: mongo:6.0
        ports:
          - 27018:27017
        env:
          MONGO_INITDB_DATABASE: lms_db2
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for PostgreSQL
        run: |
          until nc -z localhost 5433; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done
      - name: Wait for MongoDB
        run: |
          until nc -z localhost 27018; do
            echo "Waiting for MongoDB..."
            sleep 1
          done

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Make Gradlew executable
        run: chmod +x ./gradlew

      - name: Build Backend
        run: ./gradlew build

      - name: Run Backend Tests
        run: ./gradlew test -Dspring.profiles.active=test

  dockerize:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/backend:latest ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
